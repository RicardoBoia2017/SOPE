// PROGRAMA p01a.c
#include <stdio.h>
#include <signal.h>
#include <unistd.h>
#include <stdlib.h>

void sigint_handler(int signo) {
	printf("In SIGINT handler ...\n");
}

int main(void) {

	struct sigaction action;
	action.sa_handler = sigint_handler;
	sigemptyset(&action.sa_mask);

	if (sigaction(SIGINT,&action,NULL) < 0)
	{
		fprintf(stderr, "Unable to install SIGINT handler\n");
		exit(1);
	}

	if (sigaction(SIGTERM,&action,NULL) < 0)
	{
		fprintf(stderr, "Unable to install SIGTERM handler\n");
		exit(1);
	}

	if ( (sigaction(SIGUSR1,&action,NULL) < 0 )|| (sigaction(SIGUSR2,&action,NULL) < 0 ) )
	{
		fprintf(stderr, "Unable to install SIGUSR handler\n");
		exit(1);
	}

	kill (SIGUSR1, getpid() );
	printf("Sleeping for 30 seconds ...\n");
	
	int counter = sleep(30);
	while (counter != 0)
	{
		counter = sleep (counter);
	}
	
	printf("Waking up ...\n");
	exit(0);
}
